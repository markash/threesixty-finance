package com.github.markash.threesixty.financial.shared.operations;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "com.github.markash.threesixty.financial.client.operations.AllocateForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class AllocateFormData extends AbstractFormData {

    private static final long serialVersionUID = 1L;

    public Account getAccount() {
        return getFieldByClass(Account.class);
    }

    public AllocationTable getAllocationTable() {
        return getFieldByClass(AllocationTable.class);
    }

    public Amount getAmount() {
        return getFieldByClass(Amount.class);
    }

    public Comment getComment() {
        return getFieldByClass(Comment.class);
    }

    public Date getDate() {
        return getFieldByClass(Date.class);
    }

    public Description getDescription() {
        return getFieldByClass(Description.class);
    }

    public Remaining getRemaining() {
        return getFieldByClass(Remaining.class);
    }

    public Split getSplit() {
        return getFieldByClass(Split.class);
    }

    public TransactionId getTransactionId() {
        return getFieldByClass(TransactionId.class);
    }

    public static class Account extends AbstractValueFieldData<Long> {

        private static final long serialVersionUID = 1L;
    }

    public static class AllocationTable extends AbstractTableFieldBeanData {

        private static final long serialVersionUID = 1L;

        @Override
        public AllocationTableRowData addRow() {
            return (AllocationTableRowData) super.addRow();
        }

        @Override
        public AllocationTableRowData addRow(int rowState) {
            return (AllocationTableRowData) super.addRow(rowState);
        }

        @Override
        public AllocationTableRowData createRow() {
            return new AllocationTableRowData();
        }

        @Override
        public Class<? extends AbstractTableRowData> getRowType() {
            return AllocationTableRowData.class;
        }

        @Override
        public AllocationTableRowData[] getRows() {
            return (AllocationTableRowData[]) super.getRows();
        }

        @Override
        public AllocationTableRowData rowAt(int index) {
            return (AllocationTableRowData) super.rowAt(index);
        }

        public void setRows(AllocationTableRowData[] rows) {
            super.setRows(rows);
        }

        public static class AllocationTableRowData extends AbstractTableRowData {

            private static final long serialVersionUID = 1L;
            public static final String account = "account";
            public static final String amount = "amount";
            public static final String comment = "comment";
            private Long m_account;
            private BigDecimal m_amount;
            private String m_comment;

            public Long getAccount() {
                return m_account;
            }

            public void setAccount(Long newAccount) {
                m_account = newAccount;
            }

            public BigDecimal getAmount() {
                return m_amount;
            }

            public void setAmount(BigDecimal newAmount) {
                m_amount = newAmount;
            }

            public String getComment() {
                return m_comment;
            }

            public void setComment(String newComment) {
                m_comment = newComment;
            }
        }
    }

    public static class Amount extends AbstractValueFieldData<BigDecimal> {

        private static final long serialVersionUID = 1L;
    }

    public static class Comment extends AbstractValueFieldData<String> {

        private static final long serialVersionUID = 1L;
    }

    public static class Date extends AbstractValueFieldData<java.util.Date> {

        private static final long serialVersionUID = 1L;
    }

    public static class Description extends AbstractValueFieldData<String> {

        private static final long serialVersionUID = 1L;
    }

    public static class Remaining extends AbstractValueFieldData<BigDecimal> {

        private static final long serialVersionUID = 1L;
    }

    public static class Split extends AbstractValueFieldData<Boolean> {

        private static final long serialVersionUID = 1L;
    }

    public static class TransactionId extends AbstractValueFieldData<Long> {

        private static final long serialVersionUID = 1L;
    }
}
